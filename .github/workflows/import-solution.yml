name: Import Solution

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Source environment (dev, uat, prev, prod, hotfix)'
        required: true
        type: choice
        options:
          - dev
          - uat
          - prev
          - prod
          - hotfix

      branch:
        description: 'Target Git branch to update (dev, uat, prev, prod, hotfix)'
        required: true
        type: choice
        options:
          - dev
          - uat
          - prev
          - prod
          - hotfix

      solution_name:
        description: 'Name of the solution to clone (logical name)'
        required: true

jobs:
  clone-and-sync:
    runs-on: ubuntu-latest

    env:
      CLIENT_ID: ${{ secrets.POWER_PLATFORM_CLIENT_ID }}
      TENANT_ID: ${{ secrets.POWER_PLATFORM_TENANT_ID }}
      CLIENT_SECRET: ${{ secrets.POWER_PLATFORM_CLIENT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment URL
        run: |
          case "${{ github.event.inputs.environment }}" in
            dev)
              echo "ENV_URL=${{ secrets.DEV_ENV_URL }}" >> $GITHUB_ENV
              ;;
            uat)
              echo "ENV_URL=${{ secrets.UAT_ENV_URL }}" >> $GITHUB_ENV
              ;;
            prev)
              echo "ENV_URL=${{ secrets.PREV_ENV_URL }}" >> $GITHUB_ENV
              ;;
            prod)
              echo "ENV_URL=${{ secrets.PROD_ENV_URL }}" >> $GITHUB_ENV
              ;;
            hotfix)
              echo "ENV_URL=${{ secrets.HOTFIX_ENV_URL }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Invalid environment: ${{ github.event.inputs.environment }}"; exit 1
              ;;
          esac

      - name: Switch to target branch
        run: |
          git fetch
          git checkout ${{ github.event.inputs.branch }}

      - name: Clean repository before sync (preserve .git and .github)
        run: |
          find . -maxdepth 1 ! -name . -a ! -name .git -a ! -name .github -exec rm -rf {} +

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Clone solution from Power Platform (project format)
        run: |
          $POWERPLATFORMTOOLS_PACPATH auth clear
          $POWERPLATFORMTOOLS_PACPATH auth create \
            --applicationId "$CLIENT_ID" \
            --clientSecret "$CLIENT_SECRET" \
            --tenant "$TENANT_ID" \
            --environment "$ENV_URL"

          $POWERPLATFORMTOOLS_PACPATH solution clone \
            --name "${{ github.event.inputs.solution_name }}" \
            --outputDirectory . \
            --packagetype Both \
            --include general,autonumbering \
            --localize

      - name: Commit and push solution project files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Clone solution '${{ github.event.inputs.solution_name }}' from '${{ github.event.inputs.environment }}'"
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.event.inputs.branch }}
          fi
