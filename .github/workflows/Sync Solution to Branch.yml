name: Sync Solution to Branch

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Source environment (dev, uat, preview, prod, hotfix)'
        required: true
        type: choice
        options:
          - dev
          - uat
          - preview
          - prod
          - hotfix

      branch:
        description: 'Target Git branch to update'
        required: true
        default: 'dev'

      solution_name:
        description: 'Name of the solution to export'
        required: true

jobs:
  export-and-sync:
    runs-on: ubuntu-latest

    env:
      CLIENT_ID: ${{ secrets.POWER_PLATFORM_CLIENT_ID }}
      TENANT_ID: ${{ secrets.POWER_PLATFORM_TENANT_ID }}
      CLIENT_SECRET: ${{ secrets.POWER_PLATFORM_CLIENT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment URL and managed flag
        run: |
          case "${{ github.event.inputs.environment }}" in
            dev)
              echo "ENV_URL=${{ secrets.DEV_ENV_URL }}" >> $GITHUB_ENV
              echo "MANAGED=false" >> $GITHUB_ENV
              ;;
            uat)
              echo "ENV_URL=${{ secrets.UAT_ENV_URL }}" >> $GITHUB_ENV
              echo "MANAGED=true" >> $GITHUB_ENV
              ;;
            preview)
              echo "ENV_URL=${{ secrets.PREVIEW_ENV_URL }}" >> $GITHUB_ENV
              echo "MANAGED=true" >> $GITHUB_ENV
              ;;
            prod)
              echo "ENV_URL=${{ secrets.PROD_ENV_URL }}" >> $GITHUB_ENV
              echo "MANAGED=true" >> $GITHUB_ENV
              ;;
            hotfix)
              echo "ENV_URL=${{ secrets.HOTFIX_ENV_URL }}" >> $GITHUB_ENV
              echo "MANAGED=false" >> $GITHUB_ENV
              ;;
            *)
              echo "Invalid environment: ${{ github.event.inputs.environment }}"; exit 1
              ;;
          esac

      - name: Export solution from Power Platform
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ env.ENV_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: exported_solution.zip
          managed: ${{ env.MANAGED }}

      - name: Unzip solution to repository root
        run: |
          unzip -o exported_solution.zip -d ./

      - name: Switch to target branch
        run: |
          git fetch
          git checkout ${{ github.event.inputs.branch }}

      - name: Commit and push all files
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Sync solution '${{ github.event.inputs.solution_name }}' from '${{ github.event.inputs.environment }}' environment"
            git push origin ${{ github.event.inputs.branch }}
          fi
